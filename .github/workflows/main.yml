name: Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  build_and_push_to_ecr:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URL }}

      - name: Build the Docker image
        run: |
          docker build -t meine-website $GITHUB_WORKSPACE
          docker tag meine-website:latest ${{ secrets.ECR_REPOSITORY_URL }}:latest

      - name: Push the Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY_URL }}:latest

  deploy_to_eks:
    needs: build_and_push_to_ecr
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials for kubectl
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update Kubernetes deployment
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws eks --region $AWS_REGION update-kubeconfig --name deine-cluster-name
          kubectl set image deployment/meine-website meine-website-container=${{ secrets.ECR_REPOSITORY_URL }}:latest
